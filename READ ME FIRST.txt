***Testing the Guest Function***
1.To test the Guest functionality, follow these steps:

-Configure VSCode for Building and Running Code

-Ensure you have a .vscode directory in your root project folder. Create or modify the following files within this directory:

tasks.json:
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build and Run",
            "type": "shell",
            "command": "g++",
            "args": [
                "main.cpp",
                "Guest.cpp",
                "-o",
                "output/main"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run",
            "type": "shell",
            "command": "${workspaceFolder}/src/output/main",
            "dependsOn": "Build and Run",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        }
    ]
}

launch.json:
{
  "version": "0.2.0",
  "configurations": [
      {
          "name": "Debug Main",
          "type": "cppdbg",
          "request": "launch",
          "program": "${workspaceFolder}/src/output/main",
          "args": [],
          "stopAtEntry": false,
          "cwd": "${workspaceFolder}/src",
          "environment": [],
          "externalConsole": true,
          "MIMode": "gdb",
          "setupCommands": [
              {
                  "description": "Enable pretty-printing for gdb",
                  "ignoreFailures": true,
                  "text": "-enable-pretty-printing"
              }
          ],
          "preLaunchTask": "Build and Run",
          "miDebuggerPath": "gdb"
      }
  ]
}
Note: Adjust paths and commands according to your specific setup if g++ is located elsewhere. (In my PC, it is: C:\\mingw64\\bin\\gcc)

2.Build and Run Using VSCode

-Open VSCode and navigate to the Terminal menu.

-Press Ctrl + Shift + B to build and run the project. This will execute the Build and Run task defined in tasks.json.

-If the build is successful, the terminal should show:

    Executing task: g++ main.cpp Guest.cpp -o output/main

3.Manual Build and Run

-If you encounter issues with VSCode tasks, you can manually build and run the program:

Open a terminal or command prompt.
Navigate to your src folder:
    cd src
Compile the code:
    g++ main.cpp Guest.cpp -o output/main
Run the executable:
    ./output/main

4.Verify the Output

-After running the program, you should see the following prompt:

    Guest Signup:

    ============SIGN-UP MENU============
    Enter username:



****GOOD LUCK****